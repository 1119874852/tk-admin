server:
  port: 9777 #启动端口
spring:
  application:
    name: tk-auth
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null
  redis:
    database: 2
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    pool:
    max-active: 20
    password: redis-password
  datasource:
    name: test
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/tk_auth?useUnicode=true&characterEncoding=UTF8&useSSL=false
    username: root
    password: P@ssw0rd
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    rabbitmq:
      host: ${RABBIT_MQ_HOST:localhost}
      port:  ${RABBIT_MQ_PORT:5672}
      username: guest
      password: guest
    sleuth:
      enabled: true
      http:
        legacy:
          enabled: true

mybatis:
  basepackage: com.tk.auth.service.mapper
  xmlLocation: classpath:mapper/**/*.xml
  mapper-locations: "classpath*:mapper/*.xml"

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

logging:
  level:
    #        tk.mybatis: DEBUG
    com.tk.auth: DEBUG

eureka:
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health
    # docker 部署开启
    prefer-ip-address: true
    ip-address: localhost
  client:
    serviceUrl:
      #            defaultZone: http://localhost:8761/eureka/
      # docker 部署开启
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

jwt:
  token-header: Authorization
  expire: 14400
  rsa-secret: xx1WET12^%3^(WE45

client:
  id: tk-auth
  secret: 123456
  token-header: x-client-token
  expire: 14400
  rsa-secret: x2318^^(*WRYQWR(QW&T

management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false